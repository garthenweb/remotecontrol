import { setupBitsByCodes, bitsToBangs, getBangsByCodes } from '../lib/helper';

describe('setupBitsByCodes', () => {
  it('for unit 1 for system (1, 1, 1, 1, 1)', () => {
    expect(setupBitsByCodes(1, [1, 1, 1, 1, 1])).toEqual(
      [136, 136, 136, 136, 136, 136, 142, 142, 142, 142, null, null, 128, 0, 0, 0]
    );
  });

  it('for unit 2 for system (1, 1, 1, 1, 1)', () => {
    expect(setupBitsByCodes(2, [1, 1, 1, 1, 1])).toEqual(
      [136, 136, 136, 136, 136, 142, 136, 142, 142, 142, null, null, 128, 0, 0, 0]
    );
  });

  it('for unit 4 for system (1, 1, 1, 1, 1)', () => {
    expect(setupBitsByCodes(4, [1, 1, 1, 1, 1])).toEqual(
      [136, 136, 136, 136, 136, 142, 142, 136, 142, 142, null, null, 128, 0, 0, 0]
    );
  });

  it('for unit 1 for system (0, 0, 0, 0, 0)', () => {
    expect(setupBitsByCodes(1, [0, 0, 0, 0, 0])).toEqual(
      [142, 142, 142, 142, 142, 136, 142, 142, 142, 142, null, null, 128, 0, 0, 0]
    );
  });

  it('for unit 2 for system (0, 0, 0, 0, 0)', () => {
    expect(setupBitsByCodes(2, [0, 0, 0, 0, 0])).toEqual(
      [142, 142, 142, 142, 142, 142, 136, 142, 142, 142, null, null, 128, 0, 0, 0]
    );
  });

  it('for unit 4 for system (0, 0, 0, 0, 0)', () => {
    expect(setupBitsByCodes(4, [0, 0, 0, 0, 0])).toEqual(
      [142, 142, 142, 142, 142, 142, 142, 136, 142, 142, null, null, 128, 0, 0, 0]
    );
  });
});

describe('bitsToBangs', () => {
  it('for unit 1 for system (0, 0, 0, 0, 0)', () => {
    expect(
      bitsToBangs(
        [142, 142, 142, 142, 142, 136, 142, 142, 142, 142, 136, 142, 128, 0, 0, 0]
      )
    ).toEqual(
      [
        1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0,
        1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0,
        1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0,
        1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0,
        1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0,
        1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      ]
    );
  });

  it('for unit 4 for system (0, 0, 0, 0, 0)', () => {
    expect(
      bitsToBangs(
        [142, 142, 142, 142, 142, 142, 142, 136, 142, 142, 136, 142, 128, 0, 0, 0]
      )
    ).toEqual(
      [
        1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0,
        1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0,
        1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0,
        1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0,
        1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0,
        1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      ]
    );
  });

  it('for unit 1 for system (1, 1, 1, 1, 1)', () => {
    expect(
      bitsToBangs(
        [136, 136, 136, 136, 136, 136, 142, 142, 142, 142, 136, 142, 128, 0, 0, 0]
      )
    ).toEqual(
      [
        1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0,
        1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0,
        1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0,
        1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0,
        1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0,
        1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      ]
    );
  });

  it('for unit 4 for system (1, 1, 1, 1, 1)', () => {
    expect(
      bitsToBangs(
        [136, 136, 136, 136, 136, 142, 142, 136, 142, 142, 136, 142, 128, 0, 0, 0]
      )
    ).toEqual(
      [
        1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0,
        1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0,
        1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0,
        1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0,
        1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0,
        1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      ]
    );
  });
});

describe('getBangsByCodes', () => {
  it('for unit 1 for system (1, 1, 1, 1, 1) turn on', () => {
    expect(getBangsByCodes(true, {
      unitCode: 1,
      systemCode: [1, 1, 1, 1, 1],
    })).toEqual(
      [
        1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0,
        1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0,
        1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0,
        1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0,
        1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0,
        1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      ]
    );
  });
});
